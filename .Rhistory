names_to = "var",
values_to = "value"
)
long_features$var <- factor(long_features$var,
levels = c("rsi", "macd", "signal", "cci", "pctB", "close"))
long_targets <- numeric_var_targets %>%
pivot_longer(
cols=colnames(numeric_var_targets),
names_to = "var",
values_to = "value"
)
long_targets$var <- factor(long_targets$var,
levels = c("avg3", "avg5", "up", "up3", "up5"))
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()
ggplot(long_targets, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(x="11", y="22")
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(x="0~1 min-max range", y="Features")+
theme(
axis.title = element_text(size=5)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(x="0~1 min-max range", y="Features")+
theme(
axis.title = element_text(size=25)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(x="0~1 min-max range", y="Features")+
theme(
axis.title = element_text(size=15)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=15),
axis.text = element_text(size=7)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=15),
axis.text = element_text(size=12)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=13)
)
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=15)
)
numeric_var <- data[,!colnames(data) %in% c("id","macd_way")]
numeric_var_features <- numeric_var[,c("rsi", "macd", "signal", "cci", "pctB", "close")]
numeric_var_targets <- numeric_var[,c("avg3", "avg5", "up", "up3", "up5")]
numeric_var_features <- apply(numeric_var_features, 2, MinMax) %>% as.data.frame()
numeric_var_targets <- apply(numeric_var_targets, 2, MinMax) %>% as.data.frame()
long_features <- numeric_var_features %>%
pivot_longer(
cols=colnames(numeric_var_features),
names_to = "var",
values_to = "value"
)
long_features$var <- factor(long_features$var,
levels = c("rsi", "macd", "signal", "cci", "pctB", "close"))
long_targets <- numeric_var_targets %>%
pivot_longer(
cols=colnames(numeric_var_targets),
names_to = "var",
values_to = "value"
)
long_targets$var <- factor(long_targets$var,
levels = c("avg3", "avg5", "up", "up3", "up5"))
ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=15)
)
ggplot(long_targets, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Targets")+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=15)
)
apply(numeric_var, 2, mean)
apply(numeric_var, 2, round(mean))
apply(numeric_var, 2, round(mean()))
apply(numeric_var, 2, function(x) round(mean(x), 2))
apply(numeric_var, 2, function(x) round(sd(x), 2))
rbind(mean_table, sd_table)
mean_table <- apply(numeric_var, 2, function(x) round(mean(x), 2))
sd_table <- apply(numeric_var, 2, function(x) round(sd(x), 2))
rbind(mean_table, sd_table)
rbind(Mean=mean_table, SD=sd_table)
mean_sd_table <- as.data.frame(rbind(Mean=mean_table, SD=sd_table))
View(mean_sd_table)
library(corrplot)
corrplot(cor(numeric_var))
numeric_var_features
prcomp(~., numeric_var_features, scale=T, center=T)
pca <- prcomp(~., numeric_var_features, scale=T, center=T)
pca$rotation
pca$rotation %>% round()
pca$rotation %>% round(2)
pca$rotation %>% round(3)
cumsum(pca$sdev^2/sum(pca$sdev^2))
cbind(1:6, cumsum(pca$sdev^2/sum(pca$sdev^2)))
cbind(PC=1:6, cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
cum_var <- cbind(PC=1:6, cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point()
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point()+
geom_line()
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line()
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=2)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)
cum_var <- cbind(PC=factor(1:6), cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
theme(axis.text.x = element_text(vjust = 0.5))
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC), breaks = PC)
PC <- factor(1:6)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC), breaks = PC)
pca <- prcomp(~., numeric_var_features, scale=T, center=T)
pca$rotation %>% round(3)
PC <- factor(1:6)
cum_var <- cbind(PC=PC, cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC), breaks = PC)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC))
ggplot(cum_var, aes(x=factor(PC), y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC))
pca <- prcomp(~., numeric_var_features, scale=T, center=T)
pca$rotation %>% round(3)
cum_var <- cbind(PC=as.character(1:6),
cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_discrete(labels= xlab)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)+
scale_x_continuous("PC", labels = as.character(PC), breaks = PC)
ggplot(cum_var, aes(x=PC, y=cummulative_variance))+
geom_point(size=5)+
geom_line(size=1)
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)
cum_var <- cbind(PC=as.factor(1:6),
cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=15)
)
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_continuous(breaks=seq(1,,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_discete(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_discete(labels=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_discrete(labels=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_discrete(seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
theme(
axis.title = element_text(size=20),
axis.text = element_text(size=17)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)++
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=22),
axis.text = element_text(size=17)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=22),
axis.text = element_text(size=17)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
pca$rotation %>% round(3)
pca <- prcomp(~., numeric_var_features, scale=T, center=T)
pca_rotation <- pca$rotation %>% round(3)
cum_var <- cbind(PC=as.factor(1:6),
cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=5)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=6)+
geom_line(size=1.2)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=6)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
ggplot(long_targets, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Targets")+
theme(
axis.title = element_text(size=18),
axis.text = element_text(size=15)
)
ggplot(long_targets, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Targets")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)
mean_sd_table
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id, size = id), alpha = 0.5) +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07")) +
scale_size(range = c(0.5, 12))  # Adjust the range of points size
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id, size = id), alpha = 0.5) +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5) +
scale_color_manual(values = c("#00AFBB", "#E7B800", "#FC4E07"))
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5)
data %>%
group_by(id) %>%
summarise(RSI_mean=mean(rsi), CLOSE_mean=mean(close))
rsi_close_byID <- data %>%
group_by(id) %>%
summarise(RSI_mean=mean(rsi), CLOSE_mean=mean(close))
ggplot(rsi_close_byID, aes(x = RSI_mean, y = CLOSE_mean)) +
geom_point(aes(color = id), alpha = 0.5)
rsi_close_byID[,2:3] <- apply(rsi_close_byID[,2:3], 2, Standard)
rsi_close_byID
ggplot(rsi_close_byID, aes(x = RSI_mean, y = CLOSE_mean)) +
geom_point(aes(color = id), alpha = 0.5)
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5)
ggplot(data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=0.5)+
theme(legend.position="none")
reduced_data <- data.frame()
for(id in unique(data$id)){
single_id <- data[data$id == id,]
sample <- sample(nrow(single_id), size=100)
single_id <- single_id[sample,]
reduced_data <- rbind(reduced_data, single_id)
}
View(reduced_data)
ggplot(reduced_data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=0.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = rsi, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = macd, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = pctB, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = avg5, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = up, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(reduced_data, aes(x = cci, y = close)) +
geom_point(aes(color = id), alpha = 0.5, size=1.5)+
theme(legend.position="none")
ggplot(data, aes(x=id, y=close)) +
geom_boxplot() +
coord_flip()
ggplot(data, aes(x=id, y=log(close))) +
geom_boxplot() +
coord_flip()
ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=6)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
library(ggplot2)
library(psych)
library(tidyr)
library(dplyr)
library(corrplot)
MinMax <- function(x, na.rm = TRUE) {
return((x- min(x)) /(max(x)-min(x)))
}
Standard <- function(x, na.rm=TRUE) {
return((x-mean(x))/sd(x))
}
data <- read.csv(file="stock_train_data.csv")
numeric_var <- data[,!colnames(data) %in% c("id","macd_way")]
numeric_var_features <- numeric_var[,c("rsi", "macd", "signal", "cci", "pctB", "close")]
numeric_var_targets <- numeric_var[,c("avg3", "avg5", "up", "up3", "up5")]
numeric_var_features <- apply(numeric_var_features, 2, MinMax) %>% as.data.frame()
numeric_var_targets <- apply(numeric_var_targets, 2, MinMax) %>% as.data.frame()
mean_table <- apply(numeric_var, 2, function(x) round(mean(x), 2))
sd_table <- apply(numeric_var, 2, function(x) round(sd(x), 2))
mean_sd_table <- as.data.frame(rbind(Mean=mean_table, SD=sd_table))
long_features <- numeric_var_features %>%
pivot_longer(
cols=colnames(numeric_var_features),
names_to = "var",
values_to = "value"
)
long_features$var <- factor(long_features$var,
levels = c("rsi", "macd", "signal", "cci", "pctB", "close"))
long_targets <- numeric_var_targets %>%
pivot_longer(
cols=colnames(numeric_var_targets),
names_to = "var",
values_to = "value"
)
long_targets$var <- factor(long_targets$var,
levels = c("avg3", "avg5", "up", "up3", "up5"))
features_distriburion_plot <- ggplot(long_features, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Features")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)
targets_distriburion_plot <- ggplot(long_targets, aes(x=var, y=value)) +
geom_boxplot() +
coord_flip()+
labs(y="0~1 min-max range", x="Targets")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)
pca <- prcomp(~., numeric_var_features, scale=T, center=T)
pca_rotation <- pca$rotation %>% round(3)
cum_var <- cbind(PC=as.factor(1:6),
cummulative_variance=cumsum(pca$sdev^2/sum(pca$sdev^2)))
pca_cumvar_plot <- ggplot(cum_var, aes(x=PC, y=cummulative_variance, group=1))+
geom_point(size=6)+
geom_line(size=1)+
labs(y="cummulative variance", x="Principle Components")+
theme(
axis.title = element_text(size=24),
axis.text = element_text(size=19)
)+
scale_x_continuous(breaks=seq(1,6,1))
features_distriburion_plot
targets_distriburion_plot
pca_cumvar_plot
mean_sd_table
write.csv(mean_sd_table, "mean_sd_table.csv")
write.csv(pca_rotation, "pca_rotation.csv")
save(features_distriburion_plot,
targets_distriburion_plot,
pca_cumvar_plot,
mean_sd_table,
pca_rotation, file="EDA_result.RData")
